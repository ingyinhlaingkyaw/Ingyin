{"name": "test_valid_login[admin-admin123-False]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff653befea5+79173]\n\tGetHandleVerifier [0x0x7ff653beff00+79264]\n\t(No symbol) [0x0x7ff6539a9e5a]\n\t(No symbol) [0x0x7ff653a00586]\n\t(No symbol) [0x0x7ff653a0083c]\n\t(No symbol) [0x0x7ff653a54247]\n\t(No symbol) [0x0x7ff653a289af]\n\t(No symbol) [0x0x7ff653a5100d]\n\t(No symbol) [0x0x7ff653a28743]\n\t(No symbol) [0x0x7ff6539f14c1]\n\t(No symbol) [0x0x7ff6539f2253]\n\tGetHandleVerifier [0x0x7ff653eba2dd+3004797]\n\tGetHandleVerifier [0x0x7ff653eb472d+2981325]\n\tGetHandleVerifier [0x0x7ff653ed3380+3107360]\n\tGetHandleVerifier [0x0x7ff653c0aa2e+188622]\n\tGetHandleVerifier [0x0x7ff653c122bf+219487]\n\tGetHandleVerifier [0x0x7ff653bf8df4+115860]\n\tGetHandleVerifier [0x0x7ff653bf8fa9+116297]\n\tGetHandleVerifier [0x0x7ff653bdf558+11256]\n\tBaseThreadInitThunk [0x0x7fff2d57e8d7+23]\n\tRtlUserThreadStart [0x0x7fff2f81c5dc+44]", "trace": "username = 'admin', password = 'admin123', expected = False\nsetup_teardown = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f603af2fc0578093ab81b198d38f59cd\")>\n\n    @pytest.mark.parametrize(\"username, password, expected\",[\n        (\"Admin\", \"admin123\", True),\n        (\"Admin\",\"admin\", False),\n        (\"admin\",\"admin123\", False),\n        (\"aaaa\",\"aaaa\", False),\n    ])\n    def test_valid_login(username, password, expected,setup_teardown):\n        driver = setup_teardown\n        wait = WebDriverWait(driver, 10)\n        name = wait.until(EC.visibility_of_element_located((By.NAME, \"username\")))\n        name.send_keys(username)\n        pword = wait.until(EC.visibility_of_element_located((By.NAME, \"password\")))\n        pword.send_keys(password)\n        login_btn = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[@type='submit']\")))\n        login_btn.click()\n    \n        if expected:\n            assert \"dashboard\" in driver.current_url, \"Login Failed\"\n    \n        else:\n>           err_msg= wait.until(EC.visibility_of_element_located((By.XPATH, \"//div[@role='alert']\")))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_login.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f603af2fc0578093ab81b198d38f59cd\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001E99D5F5A80>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff653befea5+79173]\nE       \tGetHandleVerifier [0x0x7ff653beff00+79264]\nE       \t(No symbol) [0x0x7ff6539a9e5a]\nE       \t(No symbol) [0x0x7ff653a00586]\nE       \t(No symbol) [0x0x7ff653a0083c]\nE       \t(No symbol) [0x0x7ff653a54247]\nE       \t(No symbol) [0x0x7ff653a289af]\nE       \t(No symbol) [0x0x7ff653a5100d]\nE       \t(No symbol) [0x0x7ff653a28743]\nE       \t(No symbol) [0x0x7ff6539f14c1]\nE       \t(No symbol) [0x0x7ff6539f2253]\nE       \tGetHandleVerifier [0x0x7ff653eba2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff653eb472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff653ed3380+3107360]\nE       \tGetHandleVerifier [0x0x7ff653c0aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff653c122bf+219487]\nE       \tGetHandleVerifier [0x0x7ff653bf8df4+115860]\nE       \tGetHandleVerifier [0x0x7ff653bf8fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff653bdf558+11256]\nE       \tBaseThreadInitThunk [0x0x7fff2d57e8d7+23]\nE       \tRtlUserThreadStart [0x0x7fff2f81c5dc+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "parameters": [{"name": "username", "value": "'admin'"}, {"name": "password", "value": "'admin123'"}, {"name": "expected", "value": "False"}], "start": 1752548878226, "stop": 1752548889878, "uuid": "b827b337-439d-4f2b-9a87-87c4697ad20b", "historyId": "d74ed93027258850ae064088bd652e17", "testCaseId": "46f63ae83d79a814c2827139cf68b1cb", "fullName": "test_login#test_valid_login", "labels": [{"name": "suite", "value": "test_login"}, {"name": "host", "value": "HUAB86A4Z"}, {"name": "thread", "value": "16976-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}